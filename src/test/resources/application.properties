spring.datasource.url=jdbc:mysql://localhost:3306/vadkosto?serverTimezone=UTC&cachePrepStmts=true&useServerPrepStmts=true&rewriteBatchedStatements=true&createDatabaseIfNotExist=true
spring.datasource.username=db
spring.datasource.password=root
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=4
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.max_fetch_depth=0

spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=infinispan
spring.jpa.properties.hibernate.cache.infinispan.cfg=infinispan.xml

logging.level.ROOT=INFO
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=WARN
logging.level.org.springframework.orm.jpa=WARN
logging.level.org.springframework.transaction=WARN
logging.level.org.springframework.transaction.interceptor=WARN
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN

# прочие настройки приложения
# XML-файл входящих данных
spring.jpa.properties.app.source.file=Java_test_3000.xml
# количество потоков для записи данных в БД
spring.jpa.properties.app.sql.threads=1
# количество попыток выполнить транзакцию для текущего набора данных
spring.jpa.properties.app.try.attempts=1
# количество ошибок добавления транзакций прежде чем принудительно завершить приложение
# прежде чем счетчик ошибок увеличивается приложение пытается добавить транзакции
# столько раз, сколько указано в ${spring.jpa.properties.app.try.attempts}
# кроме того, счетчик увеличивается при каждой неудачной попытке вернуть данные в хранилище StoreService
spring.jpa.properties.app.errors.count.before.terminate=10000
# выполнять предварительную проверку файла на недопустимые значения
# приложение сначала разберет весь файл не сохраняя данные
# и только при отсутствии ошибок приступит к загрузке в БД разбирая файл заново
spring.jpa.properties.app.parser.errors.check=false
# максимальное количество пакетов хранящихся в хранилище транзакций, при достижении которого parseService
# приостанавливает добавление новых. Таким образом, общее максимальное количество хранимых транзакций равняется этому
# параметру умноженному на размер пакета установленного в spring.jpa.properties.hibernate.jdbc.batch_size
spring.jpa.properties.app.store.batch.amount=100